name: Deploy to Amazon ECS
on:
  push:
    branches:
      - main 
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ECR: ${{secrets.AWS_ECR_REPOSITORY}}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
          
      - name: Build, tag and push image to AWS ECR
        id: build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: $AWS_ECR
          IMAGE_TAG: latest
        run: |
              docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
              echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"  



      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: "1.6.6"          
      #     terraform_wrapper: false
      #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Init
      #   run: terraform -chdir=terra-create-ecr-repo/ init -input=false

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform -chdir=terra-create-ecr-repo/ plan -no-color -input=false

      # - name: Terraform Apply
      #   id: apply
      #   run: terraform -chdir=terra-create-ecr-repo/ apply -auto-approve -input=false




      
      # - name: Terraform output  
      #   env: 
      #     PLAN: "terraform ${{ steps.apply.outputs.ecr_url }}"
      #   run: | 
      #    echo "$PLAN"
        # run: |
        #    output_value=$(terraform output ecr_url)
        #    echo "Terraform Output: $output_value"
        