name: 'Terraform'

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform -chdir=terra/ init -input=false

      - name: Terraform Plan
        run: terraform -chdir=terra/ plan -input=false

      - name: Terraform Apply
        run: terraform -chdir=terra/ apply -auto-approve -input=false
    
      - name: Set output
        id: set-dns
        run: echo "::set-output name=instance_public_dns::$(terraform output instance_public_ip)"
        working-directory: ./
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
          role-to-assume: arn:aws:iam::945867449148:role/ecsTaskExecutionRole
          aws-region: "us-east-1"
      outputs:
        registry: ${{ steps.login-ecr.outputs.registry }}
        docker_username: ${{ steps.login-ecr.outputs.docker_username_123456789012_dkr_ecr_us_east_1_amazonaws_com }}
        docker_password: ${{ steps.login-ecr.outputs.docker_password_123456789012_dkr_ecr_us_east_1_amazonaws_com }}
    
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "app_repo"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG


    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: "us-east-1"

    # - name: Build, tag and push image to AWS ECR
    #   id: build
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: "app_repo"
    #     IMAGE_TAG: latest
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    #     echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"
